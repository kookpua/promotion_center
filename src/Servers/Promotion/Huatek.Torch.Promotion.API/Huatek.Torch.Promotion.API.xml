<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Huatek.Torch.Promotion.API</name>
    </assembly>
    <members>
        <!-- Badly formed XML comment ignored for member "M:Promotion.API.Controllers.PromotionController.ItemsAsync(System.Int32,System.Int32,System.String)" -->
        <member name="M:Promotion.API.Controllers.PromotionController.ItemByIdAsync(System.Int32)">
            <summary>
            根据id获取活动
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Promotion.API.Controllers.PromotionController.ItemsByPromotionIdAsync(System.Nullable{System.Int32},System.Int32,System.Int32)" -->
        <member name="M:Promotion.API.Controllers.PromotionController.UpdateProductAsync(Huatek.Torch.Promotion.Domain.PromotionAggregate.Promotions)">
            <summary>
            更新活动信息 api/v1/[controller]/items
            </summary>
            <param name="promotionToUpdate"></param>
            <returns></returns>
        </member>
        <member name="M:Promotion.API.Controllers.PromotionController.CreateProductAsync(Huatek.Torch.Promotion.Domain.PromotionAggregate.Promotions)">
            <summary>
            创建活动 api/v1/[controller]/items
            </summary>
            <param name="promotion">活动信息</param>
            <returns></returns>
        </member>
        <member name="M:Promotion.API.Controllers.PromotionController.DeletePromotionAsync(System.Int32)">
            <summary>
            删除活动 api/v1/[controller]/id
            </summary>
            <param name="id">活动id</param>
            <returns></returns>
        </member>
        <member name="M:Huatek.Torch.Promotion.API.Program.CreateHostBuilder(System.String[])">
            <summary>
            UseSerilog()在宿主机启动的时候配置serilog,与微软ILogger进行整合
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Huatek.Torch.Promotion.API.Startup.ConfigureContainer(Autofac.ContainerBuilder)">
            <summary>
            autofac
            https://autofaccn.readthedocs.io/zh/latest/lifetime/index.html
            https://autofaccn.readthedocs.io/zh/latest/lifetime/instance-scope.html
            ConfigureContainer is where you can register things directly
            with Autofac. This runs after ConfigureServices so the things
            here will override registrations made in ConfigureServices.
            Don't build the container; that gets done for you by the factory.
            </summary>
            <param name="builder"></param>
        </member>
    </members>
</doc>
